{"version":3,"sources":["../../src/pages/register/register.module.ts","../../src/pages/register/register.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterPage } from './register';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    RegisterPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterPage),\n    TranslateModule,\n  ],\n})\nexport class RegisterPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Platform, ModalController, LoadingController,ToastController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ApiProvider} from \"../../service/api/api\";\nimport { OneSignal } from '@ionic-native/onesignal';\n\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html',\n})\nexport class RegisterPage {\n  iconLtr       = \"icon-left\";\n  address       = \"العنوان\";\n  countries     = [];\n  cities        = [];\n  model   : any = { city:\"\" }\n  modal         : any;\n  city          : any;\n  code          : any;\n  signUp        : FormGroup;\n \n  constructor(\n    public navCtrl          : NavController, \n    public navParams        : NavParams,\n    public platform         : Platform,\n    public translate        : TranslateService,\n    public modalCtrl        : ModalController,\n    public loadingCtrl      : LoadingController,\n    public formBuilder      : FormBuilder,\n    public api              : ApiProvider,\n    public toastCtrl        : ToastController,\n    private oneSignal       : OneSignal) {\n\n    platform.ready().then(() => {\n      this.oneSignal.endInit();\n      this.oneSignal.getIds().then((id) => {\n        this.signUp.controls[\"device_id\"].setValue(id.userId)\n        console.log('user ID', JSON.stringify(id.userId))\n      });\n    });\n\n\n\n    this.signUp                     =      this.formBuilder.group({\n      name                          :      ['', Validators.required],\n      phone                         :      ['', Validators.required],\n      email                         :      ['', Validators.compose([Validators.maxLength(40), Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'), Validators.required])],\n      city_id                       :      ['', Validators.required],\n      country_id                    :      ['', Validators.required],\n      password                      :      ['', Validators.compose([Validators.minLength(6),Validators.required])],\n      confirmPassword               :      ['', Validators.required],\n      country_code                  :      [], \n      lang                          :      [],\n      lat                           :      ['',Validators.required],\n      lng                           :      ['',Validators.required],\n      address                       :      [],\n      device_id                     :      [],\n    }, \n    {\n      validator: this.matchingPasswords('password', 'confirmPassword')\n    });\n  }\n\n  ionViewWillEnter(){\n    this.signUp.controls['lang'].setValue(this.translate.currentLang);\n    this.signUp.controls['country_code'].setValue(this.code);\n    // this.signUp.controls['device_id'].setValue('3333');\n  }\n    \n  ionViewDidLoad() {\n    if (this.platform.isRTL) {\n      this.iconLtr=\"icon-left\";\n    } else {\n      this.iconLtr=\"icon-right\";\n    }\n    \n    this.translate.get(\"city\").subscribe(value => {\n      this.city = value;\n    });\n\n    \n    let loading = this.loadingCtrl.create({\n      spinner: 'hide',\n      content: '<img src=\"assets/imgs/logo.png\">'\n    });\n    loading.present();\n\n    this.api.countries({lang : this.translate.currentLang}).subscribe(\n      response => {\n        this.countries = response.data;\n    },\n      error => {\n        loading.dismiss();\n    },\n      () => {\n        loading.dismiss();\n    });\n\n  }\n\n  country_cities(id){\n\n    let data = { country_id : id };\n\n    let loading = this.loadingCtrl.create({\n      spinner: 'hide',\n      content: '<img src=\"assets/imgs/logo.png\">'\n    });\n    loading.present();\n    this.api.cities({\n      country_id    : id ,\n      lang          : this.translate.currentLang}).subscribe(\n      response => {\n        this.cities = response.data;\n        this.code   = response.code;\n        this.signUp.controls['country_code'].setValue(this.code);\n      },()=>{\n        loading.dismiss();\n      },()=>{\n        loading.dismiss();\n      });\n  }\n  \n  goHome(){\n    let loading = this.loadingCtrl.create({\n      spinner: 'hide',\n      content: '<img src=\"assets/imgs/logo.png\">'\n    });\n    loading.present();\n    loading.dismissAll()\n    this.api.signUp(this.signUp.value).subscribe(\n      response => {\n\n      const toast = this.toastCtrl.create({\n        message: response.message,\n        duration: 3000\n      });\n\n      toast.present();\n\n        if (response.key == \"1\") {\n          localStorage.setItem('hdaaeq_user_Data_register', JSON.stringify(response.data));\n          this.navCtrl.setRoot(\"VerifyAccountPage\");\n        }\n      },\n      error => {\n        loading.dismissAll();\n      },()=>{\n        loading.dismissAll();\n      }\n      );\n\n  }\n\n  goLogin(){\n    this.navCtrl.push(\"LoginPage\")\n  }\n\n  openMap(){\n    const modal = this.modalCtrl.create(\"LocationPage\");\n    modal.onDidDismiss(data => {\n      this.address = JSON.parse(localStorage.getItem(\"hdaaeq_map_user_address\"))\n      this.signUp.controls['address'].setValue(data.city);\n      this.signUp.controls['address'].setValue(JSON.parse(localStorage.getItem(\"hdaaeq_map_user_address\")));\n      this.signUp.controls['lat'].setValue(JSON.parse(localStorage.getItem(\"hdaaeq_map_user_lat\")));\n      this.signUp.controls['lng'].setValue(JSON.parse(localStorage.getItem(\"hdaaeq_map_user_lng\")));\n    });\n    modal.present();\n  }\n\n  matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\n    return (group: FormGroup): {[key: string]: any} => {\n      let password = group.controls[passwordKey];\n      let confirmPassword = group.controls[confirmPasswordKey];\n\n      if (password.value !== confirmPassword.value) {\n        return {\n          mismatchedPasswords: true\n        };\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts"],"sourceRoot":""}