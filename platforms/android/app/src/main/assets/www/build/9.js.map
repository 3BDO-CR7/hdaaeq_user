{"version":3,"sources":["../../src/pages/new-password/new-password.module.ts","../../src/pages/new-password/new-password.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { NewPasswordPage } from './new-password';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    NewPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(NewPasswordPage),\n    TranslateModule,\n  ],\n})\nexport class NewPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/new-password/new-password.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Platform, ModalController, LoadingController, ToastController, AlertController } from 'ionic-angular';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ApiProvider} from \"../../service/api/api\";\n\n@IonicPage()\n@Component({\n  selector: 'page-new-password',\n  templateUrl: 'new-password.html',\n})\nexport class NewPasswordPage {\n\n  validationCode: FormGroup;\n\n  constructor(\n    public navCtrl        : NavController, \n    public navParams      : NavParams,\n    public platform       : Platform,\n    public translate      : TranslateService,\n    public modalCtrl      : ModalController,\n    public loadingCtrl    : LoadingController,\n    public formBuilder    : FormBuilder,\n    public api            : ApiProvider,\n    public toastCtrl      : ToastController,\n    public alertCtrl      : AlertController) {\n\n      this.validationCode             =      this.formBuilder.group({\n        code                          :      ['', Validators.required],\n        password                      :      ['', Validators.required],\n        confirmPassword               :      ['', Validators.required],\n      }, \n      {\n        validator: this.matchingPasswords('password', 'confirmPassword')\n      });\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad NewPasswordPage');\n  }\n\n  goHome(){\n    let loading = this.loadingCtrl.create({\n      spinner: 'hide',\n      content: '<img src=\"assets/imgs/logo.png\">'\n    });\n    loading.present();\n    loading.dismissAll()\n    this.api.newPassword(this.validationCode.value).subscribe(\n      response => {\n        var message     = (this.translate.currentLang == 'en') ? '<img src=\"assets/imgs/block-user.png\" class=\"img_alert animated shake\"> Sorry This User Has Been Warned'   : '<img src=\"assets/imgs/block-user.png\" class=\"img_alert animated shake\"> عذراََ لقد تم حذر هذا المستخدم';\n        var Done        = (this.translate.currentLang == 'en') ? 'Go To The Register'                : 'الذهاب إلى التسجيل'\n      const toast = this.toastCtrl.create({\n        message: response.massage,\n        duration: 3000\n      });\n      toast.present();\n      if (response.key == \"1\") {\n       // localStorage.setItem('hdaaeq_user_Data', JSON.stringify(response.password));\n        this.navCtrl.push(\"LoginPage\");\n      } else if (response.key == \"3\") {\n        const confirm = this.alertCtrl.create({\n          message: message,\n          buttons: [\n            {\n              text: Done,\n              cssClass: 'BtnCss',\n              handler: () => {\n                this.navCtrl.push(\"LoginPage\");\n              }\n            },\n          ]\n        });\n        confirm.present();\n      }\n      },\n      error => {\n        loading.dismissAll();\n      },()=>{\n        loading.dismissAll();\n      }\n      );\n\n  }\n\n  matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\n    return (group: FormGroup): {[key: string]: any} => {\n      let password = group.controls[passwordKey];\n      let confirmPassword = group.controls[confirmPasswordKey];\n\n      if (password.value !== confirmPassword.value) {\n        return {\n          mismatchedPasswords: true\n        };\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/new-password/new-password.ts"],"sourceRoot":""}